server:
  port: 8083
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: false
spring:
  application:
    name: notification-service
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  web:
    cors:
      allowed:
        origins: '*'
        methods: '*'
        headers: '*'
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: notification-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.example.trending_service.dto
service:
  identity:
    url: lb://identity-service/identity/validate
  profile:
    url: lb://identity-service/graphql
  search:
    url: lb://search-service/search
  post:
    url: lb://post-service/post
logging:
  level:
    root: INFO
    com.example.notification_service: DEBUG
    org.aspectj: DEBUG
    com.example.notification_service.filters.KafkaEventLoggingAspect: DEBUG